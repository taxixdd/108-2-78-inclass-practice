c("A","A","C","A","D","F","D","D")
)
factor1
levels(factor1) <- c("優","佳","尚可","普")
factor1
levels(factor1)[[1]] <- "Excellent"
levels(factor1)[c(3,4)] <- c("C","D")
factor1
factor1 <- factor(c("新北市","台北市","台中市","彰化市","基隆市","苗栗縣","苗栗縣"))
factor1
levels(factor1) <- c("中部","北部","北部","中部","北部","中部")
factor1
```{r}
levels(factor1)
factor1 <- factor(c("新北市","台北市","台中市","彰化市","基隆市","苗栗縣","苗栗縣"))
factor1
levels(factor1)
factor1 <- factor(c("0-4歲","5-9歲","10歲以上","0-4歲","5-9歲","5-9歲","10歲以上"))
factor1
levels(factor1) <- c("0-9歲","10歲以上","0-9歲")
factor1
levels(factor1) <- c("北部","中部","北部","中部","北部","中部")
factor1
factor1 <- factor(c("新北市","台北市","台中市","彰化市","基隆市","苗栗縣","苗栗縣"))
factor1
levels(factor1)
levels(factor1) <- c("北部","中部","北部","中部","北部","中部")
factor1
levels(factor1) <- c("北部","中部","北部","中部","北部","中部")
factor1
levels(factor1) <- c("北部","中部","北部","中部","北部","中部")
factor1
covid19$地區 <- covid19$縣市
covid19$地區 <- covid19$縣市
covid19$地區 <- covid19$縣市
levels(covid19$地區)
currentLevels <- levels(covid19$地區)
north_regex <- "宜蘭縣|基隆市|[台臺]北市|新北市|桃園市|新竹市|新竹縣"
middle_regex <- "苗栗縣|[台臺]中市|彰化縣|南投縣|雲林縣"
south_regex <-
"嘉義市|嘉義縣|[台臺]南[縣市]|高雄市|屏東縣|澎湖縣"
east_regex <- "花蓮縣|台東縣"
currentLevels <- str_replace(currentLevels,
north_regex, "北部")
currentLevels
currentLevels <- str_replace(currentLevels,
middle_regex, "中部")
currentLevels
currentLevels <- str_replace(currentLevels,
south_regex, "南部")
currentLevels
currentLevels <- str_replace(currentLevels,
north_regex, "北部")
currentLevels <- str_replace(currentLevels,
middle_regex, "中部")
currentLevels <- str_replace(currentLevels,
south_regex, "南部")
newLevels <- str_replace(currentLevels,
east_regex, "東部")
newLevels
levels(covid19$地區) <- newLevels
levels(covid19$地區) <- newLevels
covid19$地區
levels(covid19$年齡層)
# 創造10歲間距的所有可能
start <- seq(5, 55, by=10) # 由5到55，每個值差10的數值向量
end <- seq(14, 64, by=10)
middleLevels <-
rep(
paste0(start,"-",end),
each=2) # 每個新間距要2個
newLevels <- c("4", middleLevels, "65+", "65+")
levels(covid19$年齡層) <- newLevels
covid19$年齡層
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
View(studentHeights)
factor1 <- factor(studentHeights$學年度)
factor1
# studentHeights
char2 <- c("蔡英文","習近平","Donald Trump","蔡頭")
factor2 <- factor(char2)
levels(factor2)
View(studentHeights)
factor1 <- factor(studentHeights$學年度)
factor2 <- factor(studentHeights$年齡)
levels(factor1)
factor1
# studentHeights
factor1 <- factor(studentHeights$學年度)
factor2 <- factor(studentHeights$年齡)
levels(factor1)
levels(factor2)
factor1
factor2
# studentHeights
factor1 <- factor(studentHeights$學年度)
factor2 <- factor(studentHeights$年齡)
levels(factor1)
levels(factor2)
studentHeights <- sort(c(factor1,factor2))
studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
factor1 <- factor(studentHeights$學年度)
factor2 <- factor(studentHeights$年齡)
levels(factor1)
levels(factor2)
studentHeights$學年度 <- sort(factor1)
studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
factor1 <- factor(studentHeights$學年度)
factor2 <- factor(studentHeights$年齡)
levels(factor1)
levels(factor2)
studentHeights$學年度 <- sort(factor1)
studentHeights$年齡 <- sort(factor2)
studentHeights
View(studentHeights)
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$年齡 <- factor(studentHeights$年齡)
levels(studentHeights$學年度)
levels(ftudentHeights$年齡)
studentHeights$學年度 <- sort(studentHeights$學年度)
studentHeights$年齡 <- sort(studentHeights$年齡)
studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$年齡 <- factor(studentHeights$年齡)
levels(studentHeights$學年度)
levels(ftudentHeights$年齡)
studentHeights$學年度 <- sort(studentHeights$學年度)
studentHeights$年齡 <- sort(studentHeights$年齡)
studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$年齡 <- factor(studentHeights$年齡)
levels(studentHeights$學年度)
levels(ftudentHeights$年齡)
studentHeights$學年度 <- sort(studentHeights$學年度)
studentHeights$年齡 <- sort(studentHeights$年齡)
studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$年齡 <- factor(studentHeights$年齡)
levels(studentHeights$學年度)
levels(ftudentHeights$年齡)
studentHeights$學年度 <- sort(studentHeights$學年度)
studentHeights$年齡 <- sort(studentHeights$年齡)
studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$年齡 <- factor(studentHeights$年齡)
levels(studentHeights$學年度)
levels(ftudentHeights$年齡)
studentHeights$學年度 <- sort(studentHeights$學年度)
studentHeights$年齡 <- sort(studentHeights$年齡)
studentHeights
View(studentHeights)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$學年度
levels(studentHeights$學年度)
studentHeights$學年度 <- sort(studentHeights$學年度)
studentHeights$學年度
studentHeights$學年度 <- sort(studentHeights$學年度)
studentHeights$學年度
studentHeights$學年度
studentHeights$學年度
studentHeights$學年度
studentHeights$學年度
studentHeights$學年度
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
levels(studentHeights$學年度)
studentHeights$學年度 <- stringr::str_extract(
studentHeights$學年度,
"^[0-9]+")
studentHeights$學年度
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
levels(studentHeights$學年度)
studentHeights$學年度 <- stringr::str_extract(
studentHeights$學年度,
"^[0-9]+")
studentHeights$學年度
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$年齡 <- factor(studentHeights$年齡)
levels(studentHeights$學年度)
levels(studentHeights$年齡)
studentHeights$學年度 <- stringr::str_extract(
studentHeights$學年度,
"^[0-9]+")
studentHeights$年齡 <- stringr::str_extract(
studentHeights$年齡,
"^[0-9]+")
studentHeights
studentHeights$年齡層 <- factor(studentHeights$年齡層)
studentHeights$`年齡層`
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
studentHeights$年齡層 <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
studentHeights$`年齡層`
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
studentHeights$年齡層 <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
studentHeights$`年齡層`
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
studentHeights$年齡層 <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
studentHeights$`年齡層`
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
studentHeights$年齡層 <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
studentHeights$`年齡層`
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
studentHeights$年齡層 <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
studentHeights$`年齡層`
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
studentHeights$年齡層 <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
studentHeights$`年齡層`
View(studentHeights)
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
start <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
End <- stringr::str_extract(
studentHeights$年齡層,
"[0-9]+$")
studentHeights$年齡層 <- paste(start,"-",End)
studentHeights$`年齡層`
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$年齡 <- factor(studentHeights$年齡)
levels(studentHeights$學年度)
levels(studentHeights$年齡)
studentHeights$學年度 <- stringr::str_extract(
studentHeights$學年度,
"^[0-9]+")
studentHeights$年齡 <- stringr::str_extract(
studentHeights$年齡,
"^[0-9]+")
studentHeights
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
start <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
End <- stringr::str_extract(
studentHeights$年齡層,
"[0-9]+$")
studentHeights$年齡層 <- paste(start,"-",End)
studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors
levels(differentMajors)
differentMajors <- factor(differentMajors)
levels(differentMajors)
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- c("不動產城鄉學系","不動產與城鄉環境學系","不動系")
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
str_replace(differentMajors,realEstateRegex,"不動系")
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- c("不動產城鄉學系"|"不動產與城鄉環境學系"|"不動系")
realEstateRegex
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系"|"不動產與城鄉環境學系"|"不動系"
realEstateRegex
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系"|"不動產與城鄉環境學系"|"不動系"
realEstateRegex
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系"|"不動產與城鄉環境學系"|"不動系"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
differentMajors
differentMajors <- factor(differentMajors)
levels(differentMajors)
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系|不動產與城鄉環境學系|不動系"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors <- factor(differentMajors)
currentLevels <- as.character(levels(differentMajors))
currentLevels
differentMajors <- factor(differentMajors)
currentLevels <- as.character(levels(differentMajors))
currentLevels
differentMajors <- factor(differentMajors)
currentLevels <- as.character(levels(differentMajors))
currentLevels
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系|不動產與城鄉環境學系|不動系"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors <- factor(differentMajors)
currentLevels <- as.character(levels(differentMajors))
currentLevels
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors <- factor(differentMajors)
currentLevels <- as.character(levels(differentMajors))
currentLevels
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系|不動產與城鄉環境學系|不動系"
realEstateRegex
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系|不動產與城鄉環境學系|不動系"
realEstateRegex
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系|不動產與城鄉環境學系|不動系"
realEstateRegex
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
differentMajors
differentMajors <- factor(differentMajors)
levels(differentMajors)
realEstateRegex <- "不動產城鄉學系|不動產與城鄉環境學系|不動系"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors <- factor(differentMajors)
levels(differentMajors)
differentMajors <- factor(differentMajors)
currentLevels <- as.character(levels(differentMajors))
currentLevels
differentMajors <- factor(differentMajors)
currentLevels <- as.character(levels(differentMajors))
currentLevels
differentMajors <- factor(differentMajors)
levels(differentMajors)
bSchoolRegex <- "金融系|金融與合作學系|金融與合作經營學系|休運系|休閒與運動管理學系"
bSchoolRegex
str_replace(currentLevels,bSchoolRegex,"商學院")
differentMajors <- factor(differentMajors)
differentMajors
differentMajors <- factor(differentMajors)
levels(differentMajors)
differentMajors <- factor(differentMajors)
levels(differentMajors)
finance <- "金融與合作學系|金融與合作經營學系"
public <- "公共行政暨政策學系|公共行政系"
estate <- "不動產城鄉學系|不動產與城鄉環境學系"
differentMajors <- str_replace(differentMajors,"休閒與運動管理學系","休運系")
differentMajors <- str_replace(differentMajors,finance,"金融系")
differentMajors <- str_replace(differentMajors,"經濟學系","經濟系")
differentMajors <- str_replace(differentMajors,"社會學系","社會系")
differentMajors <- str_replace(differentMajors,"社會工作學系","社工系")
differentMajors <- str_replace(differentMajors,public,"公行系")
differentMajors <- str_replace(differentMajors,estate,"不動系")
differentMajors
"商學院" <- "休運系|金融系"
"社科院" <- "經濟系|社會系|社工系"
"公共事務學院" <- "公行系|不動系"
school <- c("公共事務學院","商學院","社科院")
school <- factor(school)
levels(school)
school
View(studentHeights)
names(averageHeightByGroup) <- levels(studentHeights$年齡層)
averageHeightByGroup
pick1 <- studentHeights$年齡層 == "6-8"
pick2 <- studentHeights$年齡層 == "9-12"
pick3 <- studentHeights$年齡層 == "13-15"
mean1 <- mean(studentHeights$平均身高[pick1])
pick1 <- studentHeights$年齡層 == "6-8"
studentHeights$平均身高[pick1]
pick1 <- studentHeights$年齡層 == "6-8"
pick2 <- studentHeights$年齡層 == "9-12"
pick3 <- studentHeights$年齡層 == "13-15"
mean1 <- studentHeights$平均身高[pick1]
pick1 <- studentHeights$年齡層 == "6-8"
pick2 <- studentHeights$年齡層 == "9-12"
pick3 <- studentHeights$年齡層 == "13-15"
mean1 <- stringr::str_extract(studentHeights$平均身高,pick1)
pick1 <- studentHeights$年齡層 = "6-8"
pick1 <- studentHeights$年齡層 == "6-8"
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度)
studentHeights$年齡 <- factor(studentHeights$年齡)
levels(studentHeights$學年度)
levels(studentHeights$年齡)
studentHeights$學年度 <- stringr::str_extract(
studentHeights$學年度,
"^[0-9]+")
studentHeights$年齡 <- stringr::str_extract(
studentHeights$年齡,
"^[0-9]+")
studentHeights
studentHeights$年齡層 <- factor(studentHeights$年齡層)
levels(studentHeights$年齡層)
start <- stringr::str_extract(
studentHeights$年齡層,
"^[0-9]+")
End <- stringr::str_extract(
studentHeights$年齡層,
"[0-9]+$")
studentHeights$年齡層 <- paste(start,"-",End)
studentHeights$`年齡層`
pick1 <- studentHeights$年齡層 == "6-8"
pick1 <- studentHeights$年齡層 == 6-8
pick1 <- studentHeights$年齡層 == 6-8
pick1 <- studentHeights$年齡層 == "6-8"
mean1 <- mean(studentHeights$平均身高[1,4,7])
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean2 <- mean(studentHeights$平均身高[studentHeights$年齡層=="9-12"])
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean2 <- mean(studentHeights$平均身高[studentHeights$年齡層=="9-12"])
mean3 <- mean(studentHeights$平均身高[studentHeights$年齡層=="13-15"])
averageHeightByGroup
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean2 <- mean(studentHeights$平均身高[studentHeights$年齡層=="9-12"])
mean3 <- mean(studentHeights$平均身高[studentHeights$年齡層=="13-15"])
averageHeightByGroup
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean2 <- mean(studentHeights$平均身高[studentHeights$年齡層=="9-12"])
mean3 <- mean(studentHeights$平均身高[studentHeights$年齡層=="13-15"])
averageHeightByGroup
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean2 <- mean(studentHeights$平均身高[studentHeights$年齡層=="9-12"])
mean3 <- mean(studentHeights$平均身高[studentHeights$年齡層=="13-15"])
averageHeightByGroup <- c(mean1,mean2,mean3)
averageHeightByGroup
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean2 <- mean(studentHeights$平均身高[studentHeights$年齡層=="9-12"])
mean3 <- mean(studentHeights$平均身高[studentHeights$年齡層=="13-15"])
averageHeightByGroup <- c(mean1,mean2,mean3)
averageHeightByGroup
mean1 <- mean(studentHeights$平均身高[studentHeights$年齡層=="6-8"])
mean2 <- mean(studentHeights$平均身高[studentHeights$年齡層=="9-12"])
mean3 <- mean(studentHeights$平均身高[studentHeights$年齡層=="13-15"])
averageHeightByGroup <- c(mean1,mean2,mean3)
averageHeightByGroup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
factor(badEmployers$law)-> badEmployers$law
levels(badEmployers$law)-> violatedArticles
# violatedArticles
factor(badEmployers$law)-> badEmployers$law
levels(badEmployers$law)-> violatedArticles
# violatedArticles
factor(badEmployers$law)-> badEmployers$law
levels(badEmployers$law)-> violatedArticles
violatedArticles
violatedArticles <- names(table(badEmployers$law))
violatedArticles
pick_mostViolatedAct <- table_countsByArticle == max(table_countsByArticle)
pick_mostViolatedAct <- table_countsByArticle == max(table_countsByArticle)
table(badEmployers$law) -> table_countsByArticle
# table_countsByArticle
pick_mostViolatedAct <- table_countsByArticle == max(table_countsByArticle)
table_countsByArticle[pick_mostViolatedAct] -> mostViolatedArticle
mostViolatedArticle
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
mostViolatedArticle <-max(table_countsByArticle)
mostViolatedArticle
pick_mostViolatedAct <- table_countsByArticle == max(table_countsByArticle)
pick_act32_2_violators <-
badEmployers$law == names(mostViolatedArticle)
badEmployers$lawContent[pick_act32_2_violators][[1]] -> mostViolatedArticle_content
pick_act32_2_violators <-
badEmployers$law == names(mostViolatedArticle)
badEmployers$lawContent[pick_act32_2_violators][[1]] -> mostViolatedArticle_content
pick_mostViolatedAct <- table_countsByArticle == max(table_countsByArticle)
table_countsByArticle[pick_mostViolatedAct] -> mostViolatedArticle
mostViolatedArticle
pick_act32_2_violators <-
badEmployers$law == names(mostViolatedArticle)
badEmployers$lawContent[pick_act32_2_violators][[1]] -> mostViolatedArticle_content
mostViolatedArticle_content
mostViolatedArticle_content <- names(table(badEmployers$lawContent))
#mostViolatedArticle_content
factor(table$國文,levels=table$國文[c(16:1)],ordered=T) ->
chinese
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
factor(table$國文,levels=table$國文[c(16:1)],ordered=T) ->
chinese
chinese
factor(table$國文) -> chinese
chinese
